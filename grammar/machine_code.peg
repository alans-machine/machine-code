{
    function AST(){
    };
    AST.prototype.addStatement = function(statement){
	if (!this[statement.current]) {
	    this[statement.current] = {};
	}
	if (!this[statement.current][statement.read]){
	    this[statement.current][statement.read] = {};
	}
	this[statement.current][statement.read] = statement.action;
    };

    function Statement(current, read, next, write, move){
	this.current = current;
	this.read = read;
	this.action = { nextState : next, write: write, move: move };
    };

    var ast = new AST();
}

program = statements:statement* { statements.forEach(function(statement){ ast.addStatement(statement) }); return ast; }

statement = current:state ',' read:symbol ',' next:state ',' write:symbol ',' move:direction ';' newline? { return new Statement(current, read, next, write, move); }

state = 's' digits:digit+ { return 's' + digits.join(''); }

digit = [0-9]

symbol = [a-zA-Z0-9_]

direction = 'L' / 'R'

newline = '\n'
